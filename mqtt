print("MQTT with Adafruit IO")
import sys
import random
import time
import requests
from Adafruit_IO import MQTTClient

AIO_USERNAME = "lab20623"
AIO_KEY = "aio_fzkP43iktmax9oDKXQ8X9ztz3T6n"
AIO_IDs = ["button1", "button2"]

def connected(client):
    print("Server connected ...")
    client.subscribe("button1")
    client.subscribe("button2")
    client.subscribe("Equation")


global_equation = ""
def message(client, feed_id, payload):
    print(f"Received: " +payload)
    if(feed_id == "equation"):
        global_equation = payload
        print(global_equation)

def init_global_equation():
    headers = {}
    aio_url = "https://io.adafruit.com/api/v2/lab20623/feeds/equation"
    x = requests.get(url=aio_url, headers=headers, verify=False)
    data = x.json()
    global_equation = data["last_value"]
    print("Get latest value:", global_equation)

def modify_value(x1, x2, x3):
    result = eval(global_equation)
    print(result)
    return result

def subscribe(client , userdata , mid , granted_qos):
    print("Subscribe!!!")

def disconnected(client):
    print("Disconnected from the server!!!")
    sys.exit (1)

client = MQTTClient(AIO_USERNAME , AIO_KEY)

client.on_connect = connected  #function pointer
client.on_disconnect = disconnected
client.on_message = message
client.on_subscribe = subscribe

client.connect()
client.loop_background()
init_global_equation()

#Generate 3 random value
while True:
    time.sleep(40)
    value1 = random.randint(20, 70)
    value2 = random.randint(0, 100)
    value3 = random.randint(0, 1000)
    print("Updating ...")
    client.publish("sensor1", value1)
    client.publish("sensor2", value2)
    client.publish("sensor3", value3)
    value4 = modify_value(value1, value2, value3)
    print(value4)
    pass


